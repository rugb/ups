<% page_tree = lambda do |page, depth| %>
<tr>
  <td class="treecell"<%= make_treecell_style(depth) %>>
    <%= ((select_by_language_id(page.page_contents) and select_by_language_id(page.page_contents).title) or "(new)") %>
  </td>
  <td>
	<code>[[<%= page.int_title %>]]</code> or <code>[[<%= page.id %>]]</code>
  </td>
  <td>
    <%= "deactivated" unless page.enabled? %>
    <%= "at " + page.start_at.to_s if page.enabled? unless page.visible? %>
  </td>
  <td class="actions">
    <% page.page_contents.sort_by { |page_content| page_content.language.name }.each do |page_content| %>
    <%= link_to page_content.language.name, edit_page_path(page.id), :class => "edit" %>
    <% end %>
  </td>
  <td class="actions">
    <%= link_to "show", make_page_path(page), :class => "continue" if page.visible? %>
    <%= link_to "activate", activate_page_path(page), :class => "enable" if page.activatable? %>
  </td>
  <td class="actions">
    <%= link_to "edit", edit_page_path(page), :class => "edit" %>
  </td>
  <td class="actions">
    <%= link_to "delete", page, :confirm => "Are you sure?", :method => :delete, :class => "delete" if page.deletable? %>
    <%= link_to "deactivate", deactivate_page_path(page), :class => "disable" if page.deactivatable? %>
  </td>
</tr>
<% page.children.find(:all, :conditions => {:page_type => :page}).each { |page| page_tree.call page, depth + 1 }
end %>
<table>
  <thead>
    <tr>
      <th>
        title
      </th>
      <th>
        kramdown reference
      </th>
      <th>
        visible
      </th>
      <th>
        languages
      </th>
      <th>
      </th>
      <th>
      </th>
      <th>
      </th>
    </tr>
  </thead>
  <tbody>
    <% @pages.each { |page| page_tree.call page, 0 } %>
  </tbody>
</table>
<p class="actions">
  <%= link_to "new page", new_page_path, :class => "new" %>
</p>
